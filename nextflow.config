includeConfig "./conf/containers.config"
includeConfig "./conf/resources_handling.config"

params {
    // -- REQUIRED INPUT --//
    manifest = null

    // kraken database
    db_path = null
    db_library_fa_path = null
    // ---------------------- //

    // --- SET PIPELINE DEFAULT PARAMETERS --//
    
    // --- general pipeline
    // sets where to find the containers 
    containers_dir = "$projectDir/containers/"

    // set where output files should be published
    results_dir = "$launchDir/output/"

    // Pipeline entry point [sort_reads, consensus_gen] 
    entry_point = "sort_reads"

    // scov2 subtyping switchs
    do_scov2_subtyping = true

    // --- SET WORKFLOW SPECIFIC DEFAULT PARAMETERS --- //

    // -- CONSENSUS GENERATION
    // consnesus manifest (MANDATORY ONLY IF generate consensus entry point)
    consensus_mnf = null

    // -- SUBTYPING
    // virus subtyping branching keywords
    scv2_keyword = "Severe acute respiratory syndrome coronavirus 2"

    // -- 

    // -- Kraken2ref (k2r) 
    k2r_fq_load_mode = "full"

    // kraken report minum number of reads filter
    min_reads_for_taxid = 100

    // set maximum number of reads to be accepted
    k2r_max_total_reads_per_fq = 10000000
    // any fastq file pair with more than that number of reads
    // will be splitted into N chunks, each containing that maximum
    // amount of reads to be processed by k2r. Those splitted files
    // are intemediate files and the final output will still be per
    // reported per sample. 
    
    // set default value for k2r_dump_fq process
    k2r_dump_fq_mem = "6 GB"
    
    
    // ---------------------- //
    // -- IVAR 
    ivar_min_depth = 10
    ivar_freq_threshold = 0.75
    // ---------------------- //

}

// Execution layer settings
docker {
    enabled = false
}

singularity {
    enabled = true
}

process {
    cache='lenient'

}
profiles {
    sanger_standard {
        docker {
            enabled = false
        }
        
        singularity {
            enabled = true
            autoMounts = true
            cacheDir = "$PWD"
            runOptions = "--bind /lustre,/nfs,/software,/data/"
        }

        process {
            // by default
            cache='lenient'
            executor='local'

            // run k2r on lsf
            withName: run_k2r_sort_reads{
                executor = 'lsf'
                //label = "mem_k2r_escalate"
                cpus = 1
            }

            withName: run_k2r_dump_fastqs_and_pre_report{
                executor = 'lsf'
                //label = "mem_k2r_escalate"
                cpus = 1
            }

            // run k2r on lsf
            withName:run_kraken{
                executor='lsf'
                cpus=16
                memory='1 GB'
            }
        }
        executor {
            jobName={ "RVI-preprocess - $task.name - $task.tag" }
            perJobMemLimit=true

        }
    }
}
