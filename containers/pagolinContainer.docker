FROM ubuntu:20.04 AS spython-base
LABEL NAME PangolinContainer
LABEL AUTHOR Antonio Marinho
LABEL ID ad45
LABEL TEAM ARD/DAE
LABEL JIRA_TICKET https://jira.sanger.ac.uk/browse/DT-1895
LABEL LINUX_DIST Ubuntu:22.04
LABEL REPO https://gitlab.internal.sanger.ac.uk/malariagen1/rvi/viral_pipeline

ARG DEBIAN_FRONTEND=noninteractive
RUN mkdir /app/ &&\
    mkdir /app/bin/ &&\
    set -e &&\
    apt update &&\
    apt install -yq --no-install-recommends tzdata \
        python3-pip wget git python-is-python3 \
        build-essential cmake  libboost-filesystem-dev \
        libboost-program-options-dev \
        libboost-iostreams-dev libboost-date-time-dev \
        libprotoc-dev libprotoc-dev protobuf-compiler \
        mafft rsync libtbb-dev openmpi-bin libopenmpi-dev automake libtool autoconf make nasm
RUN cd /app/ &&\
    git clone https://github.com/yatisht/usher.git &&\
    cd usher/ &&\
    git checkout v0.6.3 &&\
    mkdir build/ &&\
    cd build/ &&\
    git clone https://github.com/intel/isa-l.git &&\
    cd isa-l/ &&\
    git checkout v2.30.0 &&\
    ./autogen.sh &&\
    ./configure &&\
    make -j 4 &&\
    make install &&\
    cd ../ &&\
    wget https://github.com/oneapi-src/oneTBB/archive/2019_U9.tar.gz &&\
    tar -xvzf 2019_U9.tar.gz &&\
    cmake  -DTBB_DIR=${PWD}/oneTBB-2019_U9 -DCMAKE_PREFIX_PATH=${PWD}/oneTBB-2019_U9/cmake .. &&\
    make -j &&\
    rsync -aP rsync://hgdownload.soe.ucsc.edu/genome/admin/exe/linux.x86_64/faToVcf . &&\
    chmod +x faToVcf &&\
    mv faToVcf ../scripts/ &&\
    export PATH=$PATH:/app/usher/build/ &&\
    export PATH=$PATH:/app/usher/scripts/ &&\
    export GOFASTA_RELEASE="v1.2.1" &&\ 
    cd /app/ &&\
    wget https://github.com/virus-evolution/gofasta/releases/download/${GOFASTA_RELEASE}/gofasta-linux-amd64 &&\
    mv ./gofasta-linux-amd64 ./gofasta &&\
    chmod +x ./gofasta &&\
    mv /app/gofasta /app/bin/ &&\
    export MINIMAP_RELEASE="v2.26" &&\
    cd /app/ &&\
    git clone https://github.com/lh3/minimap2 &&\
    cd minimap2/ &&\
    git checkout ${MINIMAP_RELEASE} &&\
    make &&\
    mv /app/minimap2/minimap2 /app/bin/ &&\
    export PATH=$PATH:/app/bin/
RUN cd /app/ &&\
    export PULP_VERSION="2.7.0" &&\
    export SNAKEMAKE_VERSION="7.32.4" &&\
    echo "cython\nhypothesis\npytest" > datrie_requirements.txt &&\
    pip install -r datrie_requirements.txt &&\
    pip install datrie &&\
    pip install pulp==${PULP_VERSION} &&\
    pip install snakemake==${SNAKEMAKE_VERSION}
RUN export PANGOLIN_RELEASE="v4.3.1" &&\
    cd /app/ &&\
    git clone https://github.com/cov-lineages/pangolin.git &&\
    cd pangolin/ &&\
    git checkout ${PANGOLIN_RELEASE} &&\
    pip install . &&\
    pip install git+https://github.com/cov-lineages/pangolin-data.git &&\
    pip install git+https://github.com/cov-lineages/scorpio.git &&\
    pip install git+https://github.com/cov-lineages/constellations.git &&\
    mv /app/bin/* /usr/local/bin/ &&\
    mv /app/usher/build/* /usr/local/bin/ &&\
    mv /app/usher/scripts/* /usr/local/bin/
RUN echo "pangolin --all-versions" >> /tests.sh
RUN chmod u+x /tests.sh
HEALTHCHECK CMD /bin/bash /tests.sh
